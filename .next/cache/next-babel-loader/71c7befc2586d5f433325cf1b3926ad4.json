{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Card, DisplayText, Form, FormLayout, Layout, Page, PageActions, TextField } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nconst UPDATE_PRICE = gql`\n  mutation productVariantUpdate($input: ProductVariantInput!) {\n    productVariantUpdate(input: $input) {\n      product {\n        title\n      }\n      productVariant {\n        id\n        price\n      }\n    }\n  }\n`;\n\nclass EditProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      discount: '',\n      price: '',\n      variantId: ''\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"itemToBeConsumed\", () => {\n      const item = store.get('item');\n      const price = item.variants.edges[0].node.price;\n      const variantId = item.variants.edges[0].node.id;\n      const discounter = price * 0.1;\n      this.setState({\n        price,\n        variantId\n      });\n      return (price - discounter).toFixed(2);\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      discount: this.itemToBeConsumed()\n    });\n  }\n\n  render() {\n    const {\n      name,\n      price,\n      discount,\n      variantId\n    } = this.state;\n    return /*#__PURE__*/_jsx(Mutation, {\n      mutation: UPDATE_PRICE,\n      children: (handleSubmit, {\n        error,\n        data\n      }) => {\n        return /*#__PURE__*/_jsx(Page, {\n          children: /*#__PURE__*/_jsx(Layout, {\n            children: /*#__PURE__*/_jsxs(Layout.Section, {\n              children: [/*#__PURE__*/_jsx(DisplayText, {\n                size: \"large\",\n                children: name\n              }), /*#__PURE__*/_jsxs(Form, {\n                children: [/*#__PURE__*/_jsx(Card, {\n                  sectioned: true,\n                  children: /*#__PURE__*/_jsxs(FormLayout, {\n                    children: [/*#__PURE__*/_jsxs(FormLayout.Group, {\n                      children: [/*#__PURE__*/_jsx(TextField, {\n                        prefix: \"$\",\n                        value: price,\n                        disabled: true,\n                        label: \"Original price\",\n                        type: \"price\"\n                      }), /*#__PURE__*/_jsx(TextField, {\n                        prefix: \"$\",\n                        value: discount,\n                        onChange: this.handleChange('discount'),\n                        label: \"Discounted price\",\n                        type: \"discount\"\n                      })]\n                    }), /*#__PURE__*/_jsx(\"p\", {\n                      children: \"This sale price will expire in two weeks\"\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(PageActions, {\n                  primaryAction: [{\n                    content: 'Save',\n                    onAction: () => {\n                      console.log('submitted');\n                    }\n                  }],\n                  secondaryActions: [{\n                    content: 'Remove discount'\n                  }]\n                })]\n              })]\n            })\n          })\n        });\n      }\n    });\n  }\n\n}\n\nexport default EditProduct;","map":{"version":3,"sources":["/Users/chasebrooks/Documents/CS/shopify-sample-app/pages/edit-products.js"],"names":["React","Card","DisplayText","Form","FormLayout","Layout","Page","PageActions","TextField","store","gql","Mutation","UPDATE_PRICE","EditProduct","Component","discount","price","variantId","field","value","setState","item","get","variants","edges","node","id","discounter","toFixed","componentDidMount","itemToBeConsumed","render","name","state","handleSubmit","error","data","handleChange","content","onAction","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Card,\n    DisplayText,\n    Form,\n    FormLayout,\n    Layout,\n    Page,\n    PageActions,\n    TextField\n  } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\n\n\nconst UPDATE_PRICE = gql`\n  mutation productVariantUpdate($input: ProductVariantInput!) {\n    productVariantUpdate(input: $input) {\n      product {\n        title\n      }\n      productVariant {\n        id\n        price\n      }\n    }\n  }\n`;\n\n  \n  class EditProduct extends React.Component {\n    state = {\n      discount: '',\n      price: '',\n      variantId: ''\n    };\n  \n    componentDidMount() {\n      this.setState({ discount: this.itemToBeConsumed() });\n    }\n  \n    render() {\n      const { name, price, discount, variantId } = this.state;\n      return (\n        <Mutation\n          mutation={UPDATE_PRICE}\n        >\n          {(handleSubmit, {error, data}) => {\n      return (\n        <Page>\n          <Layout>\n            <Layout.Section>\n              <DisplayText size=\"large\">{name}</DisplayText>\n              <Form>\n                <Card sectioned>\n                  <FormLayout>\n                    <FormLayout.Group>\n                      <TextField\n                        prefix=\"$\"\n                        value={price}\n                        disabled={true}\n                        label=\"Original price\"\n                        type=\"price\"\n                      />\n                      <TextField\n                        prefix=\"$\"\n                        value={discount}\n                        onChange={this.handleChange('discount')}\n                        label=\"Discounted price\"\n                        type=\"discount\"\n                      />\n                    </FormLayout.Group>\n                    <p>\n                      This sale price will expire in two weeks\n                    </p>\n                  </FormLayout>\n                </Card>\n                <PageActions\n                  primaryAction={[\n                    {\n                      content: 'Save',\n                      onAction: () => {\n                        console.log('submitted');\n                      }\n                    }\n                  ]}\n                  secondaryActions={[\n                    {\n                      content: 'Remove discount'\n                    }\n                  ]}\n                />\n              </Form>\n            </Layout.Section>\n          </Layout>\n        </Page>\n      );\n    }}\n    </Mutation>\n  );\n    }\n  \n    handleChange = (field) => {\n      return (value) => this.setState({ [field]: value });\n    };\n  \n    itemToBeConsumed = () => {\n      const item = store.get('item');\n      const price = item.variants.edges[0].node.price;\n      const variantId = item.variants.edges[0].node.id;\n      const discounter = price * 0.1;\n      this.setState({ price, variantId });\n      return (price - discounter).toFixed(2);\n    };\n  }\n  \n  export default EditProduct;"]},"metadata":{},"sourceType":"module"}